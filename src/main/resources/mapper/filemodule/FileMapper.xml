<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.easycloudstorage.mapper.filemodule.FileMapper">
    <insert id="insertFile" parameterType="com.easycloudstorage.pojo.NormalFile" useGeneratedKeys="true" keyProperty="fileId">
        INSERT INTO `easycloudstorage`.`normalfile` (`name`, `lastMovedTime`, `realPath`, `type`, `size`, `parentDirId`, `ownerId`, `orgId`)
        VALUES (#{name},#{lastMovedTime}, #{realPath}, #{type},#{size}, #{parentDirId}, #{ownerId}, #{orgId});
    </insert>

    <select id="selectNormalFile" resultType="NormalFile">
        select * from NormalFile where fileId=#{fileId};
    </select>

    <select id="selectAllNormalFiles" resultType="NormalFile">
        select * from NormalFile;
    </select>

    <select id="selectDirectory" resultType="Directory">
        select * from Directory where dirId=#{dirId};
    </select>

    <select id="selectAllDirectories" resultType="Directory">
        select * from Directory;
    </select>

    <update id="updateNormalFile" parameterType="NormalFile">
        update normalfile set name=#{name},lastMovedTime=#{lastMovedTime},realPath=#{realPath},
        type=#{type},size=#{size},parentDirId=#{parentDirId},ownerId=#{ownerId}
        where fileId=#{fileId};
    </update>

    <update id="updateDirectory" parameterType="Directory">
        update directory set name=#{name},lastMovedTime=#{lastMovedTime},realPath=#{realPath},
        parentDirId=#{parentDirId},ownerId=#{ownerId}
        where dirId=#{dirId};
    </update>

    <delete id="deleteNormalFile" parameterType="NormalFile">
        delete from normalfile where fileId=#{fileId};
    </delete>

    <delete id="deleteDirectory" parameterType="Directory">
        delete from directory where dirId=#{dirId};
    </delete>

    <insert id="newDirectory" parameterType="Directory">
        insert into directory ( `name`, `lastMovedTime`, `parentDirId`, `ownerId`, `realPath`) values(#{name},#{lastMovedTime},
        #{parentDirId},#{ownerId},#{realPath});
    </insert>

    <!--组织模块-->
    <resultMap id="DirectoryWithAuthority" type="Directory">
        <id column="dirId" property="dirId"/>
        <result column="name" property="name"/>
        <result column="lastMovedTime" property="lastMovedTime"/>
        <result column="realPath" property="realPath"/>
        <result column="parentDirId" property="parentDirId"/>
        <result column="ownerId" property="ownerId"/>
        <result column="orgId" property="orgId"/>

        <association property="dirAuthority" javaType="DirAuthority">
            <result column="accountId" property="accountId"/>
            <result column="dirId" property="dirId"/>
            <result column="orgId" property="orgId"/>
            <result column="authority" property="authority"/>
        </association>
    </resultMap>
    
    <select id="getVisibleDirectories" resultMap="DirectoryWithAuthority">
        select d.dirId, d.name, d.lastMovedTime, d.realPath, d.parentDirId, d.ownerId, d.orgId,
          da.accountId, da.authority
          from Directory d left join DirAuthority da on d.dirId = da.dirId
          where da.accountId = #{0} and d.orgId = #{1};
    </select>

    <resultMap id="NorFilesWithAuthority" type="NormalFile">
        <id column="fileId" property="fileId"/>
        <result column="name" property="name"/>
        <result column="lastMovedTime" property="lastMovedTime"/>
        <result column="realPath" property="realPath"/>
        <result column="type" property="type"/>
        <result column="size" property="size"/>
        <result column="parentDirId" property="parentDirId"/>
        <result column="ownerId" property="ownerId"/>
        <result column="orgId" property="orgId"/>

        <association property="norFileAuthority" javaType="NorFileAuthority">
            <result column="accountId" property="accountId"/>
            <result column="fileId" property="fileId"/>
            <result column="orgId" property="orgId"/>
            <result column="authority" property="authority"/>
        </association>
    </resultMap>

    <select id="getVisibleNorFiles" resultMap="NorFilesWithAuthority">
        select nf.fileId, nf.name, nf.lastMovedTime, nf.realPath, nf.type, nf.size, nf.parentDirId, nf.ownerId, nf.orgId,
        nfa.accountId, nfa.authority
        from NormalFile nf left join NorFileAuthority nfa on nf.fileId = nfa.fileId
        where nfa.accountId = #{0} and nf.orgId = #{1};
    </select>

</mapper>