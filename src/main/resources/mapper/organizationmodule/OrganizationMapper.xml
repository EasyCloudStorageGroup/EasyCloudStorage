<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.easycloudstorage.mapper.organizationmodule.OrganizationMapper">

    <resultMap type="Organization" id="OrganizationBean">
        <id column="orgId" property="orgId"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="ownerId" property="ownerId"/>
        <!-- 一对多的关系 -->
        <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
        <collection property="members" ofType="User">
            <id column="accountId" property="accountId"/>
            <result column="userName" property="userName"/>
            <result column="password" property="password"/>
            <result column="sex" property="sex"/>
            <result column="phoneNumber" property="phoneNumber"/>
            <result column="defaultAvatar" property="defaultAvatar"/>
        </collection>

        <collection property="groups" ofType="Group">
            <id column="groupId" property="groupId"/>
            <result column="gName" property="name"/>
            <result column="gDescription" property="description"/>
            <result column="orgId" property="orgId"/>

            <collection property="members" ofType="User">
                <id column="uAccountId" property="accountId"/>
                <result column="uUserName" property="userName"/>
                <result column="uPassword" property="password"/>
                <result column="uSex" property="sex"/>
                <result column="uPhoneNumber" property="phoneNumber"/>
                <result column="uDefaultAvatar" property="defaultAvatar"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getByOrgId" resultMap="OrganizationBean" parameterType="int">
        select o.orgId, o.name, o.description, o.ownerId,
          u.accountId, u.userName, u.password, u.sex, u.phoneNumber, u.defaultAvatar,
          g.groupId, g.name as gName, g.description as gDescription,
          u1.accountId as uAccountId, u1.userName as uUserName, u1.password as uPassword,
          u1.sex as uSex, u1.phoneNumber as uPhoneNumber, u1.defaultAvatar as uDefaultAvatar
          from Organization o left join UsersOrgs uo on o.orgId = uo.orgId
          left join User u on uo.accountId = u.accountId
          left join _Group g on o.orgId = g.orgId
          left join UsersGroups ug on g.groupId = ug.groupId
          left join User u1 on ug.accountId = u1.accountId
		  where o.orgId = #{orgId};
    </select>

    <select id="orgList" resultType="Organization">
        select * from organization;
    </select>

    <select id="getOwnerId" resultType="java.lang.String">
        select ownerId from Organization where orgId = #{orgId}
    </select>

    <insert id ="addOrg" parameterType="Organization">
        insert into organization(name, description, ownerId) values (#{name}, #{description}, #{ownerId})
    </insert>

    <delete id="deleteOrg" parameterType="String">
        DELETE FROM organization WHERE orgId=#{0};
    </delete>

    <select id="isMember" resultType="int">
        select count(*) from UsersOrgs where accountId = #{0} and orgId = #{1};
    </select>

    <insert id = "addDir" parameterType="Directory">
        insert into directory(name, lastMovedTime, parentDirId, realPath, orgId) values (#{name}, #{lastMovedTime}, NULL,#{realPath},#{orgId})
    </insert>


    <select id="getOrgByName" resultType="Organization" parameterType="String">
        select * from organization where name = #{0}
    </select>

    <insert id = "addMember" parameterType="String">
        insert into usersorgs(accountId,orgId) values (#{0}, #{1})
    </insert>

    <select id="isUser" resultType="int">
        select count(*) from user where accountId = #{0};
    </select>

    <delete id="removeMember" parameterType="String">
        DELETE FROM usersorgs WHERE accountId=#{0} and orgId=#{1};
    </delete>


    <select id="groupList" resultType="Group">
        select * from _group;
    </select>

    <insert id ="addGroup" parameterType="Group">
        insert into _group(name, description, orgId) values (#{name}, #{description}, #{orgId})
    </insert>

    <delete id="deleteGroup" parameterType="String">
        DELETE FROM _group WHERE groupId=#{0};
    </delete>

    <select id="getByGroupId" resultType="Group" parameterType="String">
        select * from _group where groupId = #{0}
    </select>

    <select id="getGroupByName" resultType="Group" parameterType="String">
        select * from _group where name = #{0}
    </select>

    <insert id = "distributeMember" parameterType="String">
        insert into usersgroups(accountId,groupId) values (#{0}, #{1})
    </insert>

    <delete id="removeGpMember" parameterType="String">
        DELETE FROM usersgroups WHERE accountId=#{0} and groupId=#{1};
    </delete>


</mapper>